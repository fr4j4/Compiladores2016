//-------- [1] PRIMERA SECCION 'Declaraciones preliminares'
import java_cup.runtime.*;
//-------- [2] SEGUNDA SECCION 'Declaracion de terminales y no-terminales'
terminal           SEMI, PLUS, MINUS, TIMES, DIVIDE, LPAREN, RPAREN;
terminal Integer   NUMBER, ID;
non terminal Object     expr_list, expr_part;
non terminal Integer    expr, factor, term;
//-------- [3] TERCERA SECCION 'Precedencia y asociatividad de terminales'

precedence left PLUS, MINUS; 
precedence left TIMES, DIVIDE; 

//-------- [4] CUARTA SECCION  'Gramatica'
/* GRAMATICA DE EJEMPLO
   expr_list ::=   expr_list expr_part
                 | expr_part
   expr_part ::=   expr SEMI
   expr      ::=   expr PLUS factor
                 | expr MINUS factor
                 | factor
   factor    ::=   factor TIMES term
                 | factor DIVIDE term
                 | term
   term     ::=    LPAREN expr RPAREN
                 | NUMBER
                 | ID 
*/
   expr_list ::= expr_list expr_part
                 |
                 expr_part;

   expr_part ::= expr:e
                 {: System.out.println(" = " + e); :}
                 SEMI
                 ;

   expr      ::= expr:e PLUS factor:f
                 {: RESULT = new Integer(e.intValue() + f.intValue()); :}
                 |
                 expr:e MINUS factor:f
                 {: RESULT = new Integer(e.intValue() - f.intValue()); :}
                 |
                 factor:f
                 {: RESULT = new Integer(f.intValue()); :}
                 ;

   factor    ::= factor:f TIMES term:t
                 {: RESULT = new Integer(f.intValue() * t.intValue()); :}
                 |
                 factor:f DIVIDE term:t
                 {: RESULT = new Integer(f.intValue() / t.intValue()); :}
                 |
                 term:t
                 {: RESULT = new Integer(t.intValue()); :}
                 ;

   term      ::= LPAREN expr:e RPAREN
                 {: RESULT = e; :}
                 |
                 NUMBER:n
                 {: RESULT = n; :}
                 |
                 ID:i
                 {: RESULT = i; :}
                 ;